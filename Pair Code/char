use charBase
use calls
use listWithNumbers

end is nil

cin callback is
	bin function a to
	bin function b to
	bin function c to
	bin function d to
	bin function e to
	bin function f to 
	bin function g to
	bin function h to
	call1 callback char a b c d e f g h

cout c callback is
	give reverse c function c to
	bout head c function to give tail c function c to
	bout head c function to give tail c function c to
	bout head c function to give tail c function c to
	bout head c function to give tail c function c to
	bout head c function to give tail c function c to
	bout head c function to give tail c function c to
	bout head c function to give tail c function c to
	bout head c callback

sout s callback is
	if not s call0 callback
	cout head s function to
	sout tail s callback

writeln s callback is
	sout s function to
	cout \n callback

readln callback is
	cin function c to
	if eq c \n call1 callback nil
	readln function t to
	call1 callback list c t

'nil' is list 'n' list 'i' list 'l' nil
'pair' is list 'p' list 'a' list 'i' list 'r' nil

isBit x is
	either not x eq T x

isListOfBit x n is
	if not n not x
	both isBit head x 
	isListOfBit tail x dec n

isChar x is
	isListOfBit x 8

debug x is
	if not x 'nil'
	if eq x T list 'T' nil
	if isChar x list ''' list x list ''' nil
	concat 'pair' 
	concat list \s nil 
	concat debug first x 
	concat list \s nil
	concat debug second x
	nil

debugWithDepth x depth is
	if not x list '0' nil
	if not depth list '?' nil
	concat 'pair' 
	concat list \s nil 
	concat debugWithDepth first x dec depth
	concat list \s nil
	concat debugWithDepth second x dec depth
	nil	

coutfe c callback is
	forEach uncall bout reverse c callback

getLine callback is
	eof function e to 
	if e call1 callback emptyList
	cin function c to
	getLine function s to
	call1 callback pair c s

ord c is normalize c

chr x is alignNumber x 8

atoib s b result is 
	if not s then result
	atoib tail s b
		sum 
			mult result b 
			subtract ord head s ord '0'

atoi s is atoib s 10 0

itoabr x b is
	if not x then pair '0' nil
	give divide x b function p to
	give chr sum ord '0' second p function c to
	if first p 
	then pair c itoabr first p b
	else pair c nil

itoab x b is
	reverse itoabr x b

itoa x is itoab x 10
